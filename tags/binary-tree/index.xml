<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>binary tree on Untitled Thoughts</title>
    <link>/tags/binary-tree/</link>
    <description>Recent content in binary tree on Untitled Thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Â©2020 Ryan Ma</copyright>
    <lastBuildDate>Mon, 30 Mar 2020 18:07:04 -0500</lastBuildDate>
    
        <atom:link href="/tags/binary-tree/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cracking the Coding Interview questions on Leetcode</title>
      <link>/posts/ctci-on-leetcode/</link>
      <pubDate>Mon, 30 Mar 2020 18:07:04 -0500</pubDate>
      
      <guid>/posts/ctci-on-leetcode/</guid>
      <description>Note this page is still work in progress
 Chapter 1: Arrays and Strings Chapter 2: Linked Lists Chapter 3: Stacks and Queues Chapter 4: Trees and Graphs Chapter 8: Recursion and Dynamic Programming Chapter 10: Sorting and Searching  Chapter 1: Arrays and Strings 1.1 Is Unique
217. Contains Duplicate
1.2 Check Permutation
567. Permutation in String
1.3 URLify
404
1.4 Palindrome Permutation
266. Palindrome Permutation  (Leetcode premium)</description>
      
    </item>
    
    <item>
      <title>Binary Tree Interview Questions</title>
      <link>/posts/leetcode-binary-tree/</link>
      <pubDate>Wed, 04 Mar 2020 18:07:04 -0500</pubDate>
      
      <guid>/posts/leetcode-binary-tree/</guid>
      <description>Binary Tree A binary tree is a special type of graph which cannot have any cycles. It is very different from binary search tree in term of properties and usage. Binary tree is an efficient way of representing hiearchical data, and its advanced forms are widely used in implementing database indices, sorting algorithms, encoders and decision-making process.
Binary Tree problems are great to test one&#39;s ability to think recursively, since recursion one of the fundamentals of CS.</description>
      
    </item>
    
  </channel>
</rss>
